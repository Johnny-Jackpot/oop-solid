ООП - подход к программированию, в котором основная идея - 
использование объектов и классов.

Класс - чертёж, схема, описание. (имеет свойства и методы) (тип данных с переменными и ф-ми)
Объект - екземпляр класса. (переменная типа класса)

конструктор - метод, который вызывается при создании объекта.
деструктор - -//- при уничтожении объекта.

Константы класса - неизменяемые свойства, которые принадлежат классу, а не объекту.

$this-> - указатель на объект, который вызывает метод.(доступ к конкретной машине)
self:: - указатель на класс, в котором обьявлен метод.(доступ к чертежу в целом)

Статические свойства и методы - принадлежат классу, но не объекту.(static)

class Car {
    public static $engine = 1; 
    public static function dosmth() {//}
    public function test() {
        echo self::$engine;
        self::dosmth();
    }
}

Если метод или свойство характеризует сам класс, но не объект - static, иначе - не используем.

echo Car::$engine;
Car::Dosmth();

таким образом можна обращаться к методам и свойствам не создавая объект

Наследование - механизм языка, позволяющий описать новый класс на 
основе уже существующего класса. Класс-потомок может добавить собственные методы
и свойства, а также пользоваться родительскими методами и свойствами.

финальный метод и класс

Инкапсуляция - механизм языка, который позволяет ограничить доступ одних компонентов
программы к другим

Модификаторы доступа определяют возможность получения доступа к
членам класса из разных мест программы

public, protected, private

Полиморфизм - возможность создавать разные реализации
используя одинаковые названия и вызовы методов объектов.

Контроль типа
Сигнатура метода - имя метода, число аргументов и типы аргументов (при использовании 
контроля типов).

















